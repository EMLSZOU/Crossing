<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:dt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=utf-8">
<meta name=ProgId content=OneNote.File>
<meta name=Generator content="Microsoft OneNote 15">
<link id=Main-File rel=Main-File href=Py.htm>
<link rel=File-List href="Py.files/filelist.xml">
</head>

<body lang=zh-CN style='font-family:微软雅黑;font-size:10.5pt;color:black'>

<div style='direction:ltr;border-width:100%'>

<div style='direction:ltr;margin-top:0in;margin-left:0in;width:8.0902in'>

<div style='direction:ltr;margin-top:0in;margin-left:.4861in;width:2.327in'>

<p style='margin:0in;font-family:"Microsoft YaHei";font-size:20.0pt'><span
lang=zh-CN>慕课</span><span lang=en-US>/</span><span lang=zh-CN>开发环境</span></p>

</div>

<div style='direction:ltr;margin-top:.0409in;margin-left:.4861in;width:1.7187in'>

<p style='margin:0in;font-size:10.0pt;color:gray'><span style='font-family:
Calibri'>2016</span><span style='font-family:"Microsoft YaHei"'>年</span><span
style='font-family:Calibri'>8</span><span style='font-family:"Microsoft YaHei"'>月</span><span
style='font-family:Calibri'>31</span><span style='font-family:"Microsoft YaHei"'>日</span></p>

<p style='margin:0in;font-family:Calibri;font-size:10.0pt;color:gray'>9:36</p>

</div>

<div style='direction:ltr;margin-top:.4763in;margin-left:0in;width:8.0902in'>

<ul style='margin-left:.4854in;direction:ltr;unicode-bidi:embed;margin-top:
 0in;margin-bottom:0in'>
 <p style='margin:0in;font-family:"Microsoft YaHei";font-size:10.5pt'>学会编程，最重要的不是天赋，而是决心。</p>
 <p style='margin:0in;font-family:"Microsoft YaHei";font-size:10.5pt'>很多技术活，是一门手艺。手艺，最重要是技术熟练和精湛。</p>
 <p style='margin:0in;font-size:10.5pt'><span style='font-family:Arial'>• </span><span
 style='font-family:"Microsoft YaHei"'>注重能力培养和实践。读和写、注重细节、发现不同、不要复制粘贴而要手打代码，足够的代码练习，让程序运行起来。自己专研问题和寻求答案的能力。</span></p>
 <p style='margin:0in;font-size:10.5pt'><span style='font-family:Arial'>• </span><span
 style='font-family:"Microsoft YaHei"'>注重好习惯的养成。怎样写出好的代码、好的注释、好的项目。</span></p>
 <p style='margin:0in;font-family:"Microsoft YaHei";font-size:10.5pt'>坚持练习。“万事开头难”，对于有价值的事情尤其如
 此。要学好一样东西，每天练习必不可少。也许你害怕失败，一碰到困难就想放弃；也许你缺乏自律，一碰到“无聊”
 的事情就不想上手；也许你被人夸“有天分”而自视甚高，不愿意做些看上去很笨拙的事情，
 怕有负你”神童”的称号；也许你太过激进，把自己跟编程老手相比，让自己失去了信 心。如果这天自己的状态很差、碰到做不出来的、甚至看不懂的习题，
 你可以暂时跳过去，过一阵子回来再看。一开始你可能什么都看不懂，这会让你感觉很不舒服。如果你坚持练习下去，坚持去上下求索，你最终会学会这些东西的。</p>
 <p style='margin:0in;font-family:"Microsoft YaHei";font-size:12.0pt;
 color:#5B9BD5' lang=en-US>&nbsp;</p>
 <ol type=1 style='margin-left:0in;direction:ltr;unicode-bidi:embed;margin-top:
  0in;margin-bottom:0in;font-size:16.0pt;font-weight:bold;font-style:normal'>
  <li value=1 style='margin-top:0;margin-bottom:0;vertical-align:middle;
      font-weight:bold;color:#002060' lang=en-US><span style='font-size:16.0pt;
      font-weight:bold;font-style:normal;font-weight:bold;font-family:"Microsoft YaHei";
      font-size:16.0pt'>简介</span></li>
 </ol>
 <p style='margin:0in;font-size:10.5pt'><span style='font-family:微软雅黑'>Python（英音：/</span><span
 style='font-family:"Arial Unicode MS"'>ˈpaɪθən</span><span style='font-family:
 微软雅黑'>/ 美音：</span><span style='font-family:"Arial Unicode MS"'>/ˈpaɪθɑːn</span><span
 style='font-family:微软雅黑'>/）,意思“巨蟒”， 是一种面向对象的解释型计算机程序设计语言，由荷兰人Guido van
 Rossum于1989年发明，第一个公开发行版发行于1991年。读作“派森”。</span></p>
 <p style='margin:0in;font-family:微软雅黑;font-size:10.5pt'><span lang=en-US>Python</span><span
 lang=zh-CN>包括：语法、解释器（</span><span lang=en-US>Python Virtue Machine/PVM</span><span
 lang=zh-CN>）、官方库。</span></p>
 <p style='margin:0in;font-family:微软雅黑;font-size:10.5pt'><span lang=en-US>Python</span><span
 lang=zh-CN>的资源：内置数据类型、函数、异常处理机制、模块、属性、官方库、第三方库；自己写的模块；已编译的</span><span
 lang=en-US>C/C++</span><span lang=zh-CN>或者</span><span lang=en-US>Java</span><span
 lang=zh-CN>扩展；官方文档；出版书籍。</span></p>
 <p style='margin:0in;font-family:微软雅黑;font-size:10.5pt'>&nbsp;</p>
 <p style='margin:0in;font-family:微软雅黑;font-size:10.5pt'><span
 style='font-weight:bold' lang=en-US>Python</span><span style='font-weight:
 bold' lang=zh-CN>的特点：</span><span lang=zh-CN>优雅、明确、简单；可移植；</span><span
 lang=en-US>Python</span><span lang=zh-CN>重视可读性、一致性、可重用性和可维护性，提高了软件质量。脚本语言一样方便灵活，高级语言一样功能强大。</span></p>
 <p style='margin:0in;font-family:微软雅黑;font-size:10.5pt'><span lang=zh-CN>极简主义的语法：简洁易懂，高度一致的编程模式。</span><span
 lang=en-US>Python</span><span lang=zh-CN>创立者是数学科班出身，所以</span><span lang=en-US>Python</span><span
 lang=zh-CN>的语法和工具高度统一，而</span><span lang=en-US>Perl</span><span lang=zh-CN>的创立者是语言学科班出身，所以</span><span
 lang=en-US>Perl</span><span lang=zh-CN>表达自由而微妙，对环境敏感。
 但是，工程与艺术不同，在工程世界，我们需要的是最小化功能集合与可预测性，自由表达是一种噩梦。代码是为读者</span><span lang=en-US>(</span><span
 lang=zh-CN>维护或者重用</span><span lang=en-US>)</span><span lang=zh-CN>写的。</span></p>
 <p style='margin:0in;font-family:微软雅黑;font-size:10.5pt'>Python程序通常比 C、C++ 或
 Java 更短小，因为: 高级数据结构，一条语句可进行复杂的操作； 用缩进代替大括号； 变量或参数无需声明。</p>
 <p style='margin:0in;font-family:微软雅黑;font-size:10.5pt'><span lang=en-US>Python</span><span
 lang=zh-CN>与其他语言对比</span></p>
 <div style='direction:ltr'>
 <table border=1 cellpadding=0 cellspacing=0 valign=top style='direction:ltr;
  border-collapse:collapse;border-style:solid;border-color:#A3A3A3;border-width:
  1pt;margin-left:.3333in'>
  <tr>
   <td style='border-style:solid;border-color:#A3A3A3;border-width:1pt;
   vertical-align:top;width:.6673in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p style='margin:0in;font-family:微软雅黑;font-size:10.5pt'>&nbsp;</p>
   </td>
   <td style='border-style:solid;border-color:#A3A3A3;border-width:1pt;
   vertical-align:top;width:1.084in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p style='margin:0in;font-family:微软雅黑;font-size:10.5pt'>类型</p>
   </td>
   <td style='border-style:solid;border-color:#A3A3A3;border-width:1pt;
   vertical-align:top;width:.8118in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p style='margin:0in;font-family:微软雅黑;font-size:10.5pt'>运行速度</p>
   </td>
   <td style='border-style:solid;border-color:#A3A3A3;border-width:1pt;
   vertical-align:top;width:.6972in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p style='margin:0in;font-family:微软雅黑;font-size:10.5pt'>代码量</p>
   </td>
  </tr>
  <tr>
   <td style='border-style:solid;border-color:#A3A3A3;border-width:1pt;
   vertical-align:top;width:.6673in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p style='margin:0in;font-family:微软雅黑;font-size:10.5pt' lang=en-US>C</p>
   </td>
   <td style='border-style:solid;border-color:#A3A3A3;border-width:1pt;
   vertical-align:top;width:1.084in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p style='margin:0in;font-family:微软雅黑;font-size:10.5pt'>编译为机器码</p>
   </td>
   <td style='border-style:solid;border-color:#A3A3A3;border-width:1pt;
   vertical-align:top;width:.8118in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p style='margin:0in;font-family:微软雅黑;font-size:10.5pt'>非常快</p>
   </td>
   <td style='border-style:solid;border-color:#A3A3A3;border-width:1pt;
   vertical-align:top;width:.6972in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p style='margin:0in;font-family:微软雅黑;font-size:10.5pt'>非常多</p>
   </td>
  </tr>
  <tr>
   <td style='border-style:solid;border-color:#A3A3A3;border-width:1pt;
   vertical-align:top;width:.6673in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p style='margin:0in;font-family:微软雅黑;font-size:10.5pt' lang=en-US>Java</p>
   </td>
   <td style='border-style:solid;border-color:#A3A3A3;border-width:1pt;
   vertical-align:top;width:1.084in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p style='margin:0in;font-family:微软雅黑;font-size:10.5pt'>编译为字节码</p>
   </td>
   <td style='border-style:solid;border-color:#A3A3A3;border-width:1pt;
   vertical-align:top;width:.8118in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p style='margin:0in;font-family:微软雅黑;font-size:10.5pt'>快</p>
   </td>
   <td style='border-style:solid;border-color:#A3A3A3;border-width:1pt;
   vertical-align:top;width:.6972in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p style='margin:0in;font-family:微软雅黑;font-size:10.5pt'>多</p>
   </td>
  </tr>
  <tr>
   <td style='border-style:solid;border-color:#A3A3A3;border-width:1pt;
   vertical-align:top;width:.6673in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p style='margin:0in;font-family:微软雅黑;font-size:10.5pt' lang=en-US>Python</p>
   </td>
   <td style='border-style:solid;border-color:#A3A3A3;border-width:1pt;
   vertical-align:top;width:1.084in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p style='margin:0in;font-family:微软雅黑;font-size:10.5pt'>解释执行</p>
   </td>
   <td style='border-style:solid;border-color:#A3A3A3;border-width:1pt;
   vertical-align:top;width:.8118in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p style='margin:0in;font-family:微软雅黑;font-size:10.5pt'>慢</p>
   </td>
   <td style='border-style:solid;border-color:#A3A3A3;border-width:1pt;
   vertical-align:top;width:.6972in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
   <p style='margin:0in;font-family:微软雅黑;font-size:10.5pt'>少</p>
   </td>
  </tr>
 </table>
 </div>
 <p style='margin:0in;font-size:10.5pt'><span style='font-family:Arial'>Python</span><span
 style='font-family:"Microsoft YaHei"'>是强类型语言、动态类型语言。</span></p>
 <p style='margin:0in;font-size:10.5pt'><span style='font-family:"Microsoft YaHei"'>在Python中一切皆是对象：不论是数值（整型、浮点型），字符串，字典，元组对象，还是他们所对应的类型，以及函数，模块等你所能看到的都是对象，他们的祖先是</span><span
 style='font-family:Arial'>PyObject</span><span style='font-family:"Microsoft YaHei"'>。而</span><span
 style='font-family:Arial'>Java</span><span style='font-family:"Microsoft YaHei"'>中至少函数，基本数据类型都不算对象。</span></p>
 <p style='margin:0in;font-size:10.5pt'><span style='font-family:Arial'>Python</span><span
 style='font-family:"Microsoft YaHei"'>的垃圾收集机制主要使用的引用计数方式。</span></p>
 <p style='margin:0in;font-family:微软雅黑;font-size:10.5pt'><span lang=zh-CN>Python
 是 可扩展、混合的：胶水语言，可与其他语言混合，</span><span lang=en-US>C/C++</span><span lang=zh-CN>，</span><span
 lang=en-US>Java</span><span lang=zh-CN>，</span><span lang=en-US>C#</span><span
 lang=zh-CN>。</span></p>
 <p style='margin:0in;font-family:微软雅黑;font-size:10.5pt'><span lang=en-US>Python</span><span
 lang=zh-CN>强大：动态类型，无需声明。动态内存管理，自动扩展和收缩内存、垃圾回收。有模块、类、异常处理等高级语言的功能，给大型程序开发提供足够的支持。高级的数据类型，内置的对象和内置的工具（比如列表及其</span><span
 lang=en-US>slice</span><span lang=zh-CN>操作）。丰富强大的标准库和第三方库。</span></p>
 <p style='margin:0in;font-size:10.5pt'><span style='font-family:微软雅黑'
 lang=zh-CN>编写、调试、维护更快速更灵活：简洁的语法，动态类型，解释型语言无需编译</span><span style='font-family:
 Calibri' lang=en-US>/</span><span style='font-family:微软雅黑' lang=zh-CN>链接，标准库和第三方库很强大。</span></p>
 <p style='margin:0in;font-family:微软雅黑;font-size:10.5pt'>&nbsp;</p>
 <p style='margin:0in;font-family:微软雅黑;font-size:10.5pt'><span
 style='font-weight:bold'>缺点：</span>运行速度慢（并没有太大的影响），代码发布不能加密。</p>
 <p style='margin:0in;margin-left:.375in;font-size:10.5pt'><span
 style='font-family:"Microsoft YaHei"'>GIL（全局解释锁）：一直被不少开发者所诟病，</span><span
 style='font-family:Arial'>Python</span><span style='font-family:"Microsoft YaHei"'>的多线程在多</span><span
 style='font-family:Arial'>CPU</span><span style='font-family:"Microsoft YaHei"'>条件下并不能并行的运行，而只能是每个线程运行的时候首先需要获得解释器的访问权限才可以执行，其他线程只能等待，不过</span><span
 style='font-family:Arial'>GIL</span><span style='font-family:"Microsoft YaHei"'>并不是</span><span
 style='font-family:Arial'>Python</span><span style='font-family:"Microsoft YaHei"'>的致命缺点，因为有很多方案——协程或者多进程机制来弥补。而</span><span
 style='font-family:Arial'>Java</span><span style='font-family:"Microsoft YaHei"'>支持真正的多线程并发操作，能很好的控制资源的的共享。</span></p>
 <p style='margin:0in;font-family:微软雅黑;font-size:10.5pt'>&nbsp;</p>
 <p style='margin:0in;font-family:微软雅黑;font-size:10.5pt'><span lang=en-US>Python</span><span
 lang=zh-CN>适合的领域：</span><span lang=en-US>Web</span><span lang=zh-CN>网站和各种网络服务、系统工具和脚本、作为胶水语言把其他语言开发的模块包装起来方便使用。不适合的领域：贴近硬件的代码（首选</span><span
 lang=en-US>C</span><span lang=zh-CN>）；移动开发（</span><span lang=en-US>ios</span><span
 lang=zh-CN>用</span><span lang=en-US>oc</span><span lang=zh-CN>，</span><span
 lang=en-US>swift</span><span lang=zh-CN>；安卓</span><span lang=en-US>Java</span><span
 lang=zh-CN>）；游戏开发（</span><span lang=en-US>C</span><span lang=zh-CN>和</span><span
 lang=en-US> C++</span><span lang=zh-CN>）。实际应用：</span><span lang=en-US>Youtube</span><span
 lang=zh-CN>、豆瓣、搜狐邮箱、</span><span lang=en-US>openstack</span><span lang=zh-CN>……</span><span
 lang=en-US>google</span><span lang=zh-CN>、</span><span lang=en-US>yahoo</span><span
 lang=zh-CN>、</span><span lang=en-US>NASA</span></p>
 <p style='margin:0in;font-family:微软雅黑;font-size:10.5pt' lang=en-US>&nbsp;</p>
 <p style='margin:0in;font-family:微软雅黑;font-size:10.5pt'>Python的核心思想：以对象为核心组织代码(Everything
 is object)，支持多种编程范式(multi-paradigm)，采用动态类型(dynamic typing)，自动进行内存回收(garbage
 collection)。Python支持解释运行(interpret)，并能调用C库进行拓展。Python有强大的标准库 (battery
 included)，以及第三方包，如Django, web.py, wxpython, numpy, matplotlib,PIL。</p>
 <p style='margin:0in;font-family:Calibri;font-size:14.0pt;color:#1E4E79'
 lang=en-US><span style='font-weight:bold'>The Zen of Python</span></p>
 <p style='margin:0in;font-family:"Microsoft YaHei";font-size:11.0pt'><span
 style='font-weight:bold'>&gt;&gt;&gt; import this</span></p>
 <p style='margin:0in;font-family:"Microsoft YaHei";font-size:11.0pt'>The Zen
 of Python, by Tim Peters</p>
 <p style='margin:0in;font-family:"Microsoft YaHei";font-size:11.0pt'>Beautiful
 is better than ugly.</p>
 <p style='margin:0in;font-family:"Microsoft YaHei";font-size:11.0pt'>Explicit
 is better than implicit.</p>
 <p style='margin:0in;font-family:"Microsoft YaHei";font-size:11.0pt'>Simple is
 better than complex.</p>
 <p style='margin:0in;font-family:"Microsoft YaHei";font-size:11.0pt'>Complex
 is better than complicated.</p>
 <p style='margin:0in;font-family:"Microsoft YaHei";font-size:11.0pt'>Flat is
 better than nested.</p>
 <p style='margin:0in;font-family:"Microsoft YaHei";font-size:11.0pt'>Sparse is
 better than dense.</p>
 <p style='margin:0in;font-family:"Microsoft YaHei";font-size:11.0pt'>Readability
 counts.</p>
 <p style='margin:0in;font-family:"Microsoft YaHei";font-size:11.0pt'>Special
 cases aren't special enough to break the rules.</p>
 <p style='margin:0in;font-family:"Microsoft YaHei";font-size:11.0pt'>Although
 practicality beats purity.</p>
 <p style='margin:0in;font-family:"Microsoft YaHei";font-size:11.0pt'>Errors
 should never pass silently.</p>
 <p style='margin:0in;font-family:"Microsoft YaHei";font-size:11.0pt'>Unless
 explicitly silenced.</p>
 <p style='margin:0in;font-family:"Microsoft YaHei";font-size:11.0pt'>In the
 face of ambiguity, refuse the temptation to guess.</p>
 <p style='margin:0in;font-family:"Microsoft YaHei";font-size:11.0pt'>There
 should be one-- and preferably only one --obvious way to do it.</p>
 <p style='margin:0in;font-family:"Microsoft YaHei";font-size:11.0pt'>Although
 that way may not be obvious at first unless you're Dutch.</p>
 <p style='margin:0in;font-family:"Microsoft YaHei";font-size:11.0pt'>Now is
 better than never.</p>
 <p style='margin:0in;font-family:"Microsoft YaHei";font-size:11.0pt'>Although
 never is often better than *right* now.</p>
 <p style='margin:0in;font-family:"Microsoft YaHei";font-size:11.0pt'>If the
 implementation is hard to explain, it's a bad idea.</p>
 <p style='margin:0in;font-family:"Microsoft YaHei";font-size:11.0pt'>If the
 implementation is easy to explain, it may be a good idea.</p>
 <p style='margin:0in;font-family:"Microsoft YaHei";font-size:11.0pt'>Namespaces
 are one honking great idea -- let's do more of those!</p>
 <p style='margin:0in;font-family:Arial;font-size:10.5pt'>&nbsp;</p>
 <p style='margin:0in;font-family:微软雅黑;font-size:10.5pt' lang=en-US>&nbsp;</p>
 <ol type=1 style='margin-left:0in;direction:ltr;unicode-bidi:embed;margin-top:
  0in;margin-bottom:0in;font-size:16.0pt;font-weight:bold;font-style:normal'>
  <li value=2 style='margin-top:0;margin-bottom:0;vertical-align:middle;
      font-weight:bold;color:#002060' lang=en-US><span style='font-size:16.0pt;
      font-weight:bold;font-style:normal;font-weight:bold;font-family:"Microsoft YaHei";
      font-size:16.0pt'>开发环境搭建</span></li>
 </ol>
 <p style='margin:0in;font-size:10.5pt'><a href="https://www.python.org/"><span
 style='font-family:微软雅黑' lang=zh-CN>https://www.python.org/</span></a><span
 style='font-family:Arial' lang=en-US><span style='mso-spacerun:yes'>   
 </span></span><span style='font-family:微软雅黑' lang=zh-CN>安装</span><span
 style='font-family:微软雅黑' lang=en-US>Python</span><span style='font-family:
 微软雅黑' lang=zh-CN>，</span><span style='font-weight:bold;font-family:微软雅黑'
 lang=en-US>2.X</span><span style='font-weight:bold;font-family:微软雅黑'
 lang=zh-CN>版，</span><span style='font-weight:bold;font-family:微软雅黑'
 lang=en-US>3.X</span><span style='font-weight:bold;font-family:微软雅黑'
 lang=zh-CN>版，两个语法不兼容</span><span style='font-family:微软雅黑' lang=zh-CN>。</span></p>
 <p style='margin:0in;font-size:10.5pt'><span style='font-weight:bold;
 font-family:Calibri' lang=en-US>Python</span><span style='font-weight:bold;
 font-family:微软雅黑' lang=en-US>2</span><span style='font-weight:bold;font-family:
 微软雅黑' lang=zh-CN>：</span><span style='font-family:"Microsoft YaHei"'
 lang=zh-CN>下载之后，就和装其他软件一样，双击，一路</span><span style='font-family:"Microsoft YaHei"'
 lang=en-US>Next</span><span style='font-family:"Microsoft YaHei"' lang=zh-CN>，请把安装路径复制下来，比如我的是“</span><span
 style='font-family:"Microsoft YaHei"' lang=en-US>C</span><span
 style='font-family:"Microsoft YaHei"' lang=zh-CN>：</span><span
 style='font-family:"Microsoft YaHei"' lang=en-US>\python27\</span><span
 style='font-family:"Microsoft YaHei"' lang=zh-CN>”。设置环境变量，右键单击我的电脑，依次点击</span><span
 style='font-family:"Microsoft YaHei"' lang=en-US>&quot;</span><span
 style='font-family:"Microsoft YaHei"' lang=zh-CN>属性</span><span
 style='font-family:"Microsoft YaHei"' lang=en-US>&quot;-&gt;&quot;</span><span
 style='font-family:"Microsoft YaHei"' lang=zh-CN>高级</span><span
 style='font-family:"Microsoft YaHei"' lang=en-US>&quot;-&gt;&quot;</span><span
 style='font-family:"Microsoft YaHei"' lang=zh-CN>环境变量</span><span
 style='font-family:"Microsoft YaHei"' lang=en-US>&quot;</span><span
 style='font-family:"Microsoft YaHei"' lang=zh-CN>，在“系统变量”表单中点击叫做</span><span
 style='font-family:"Microsoft YaHei"' lang=en-US>Path</span><span
 style='font-family:"Microsoft YaHei"' lang=zh-CN>的变量，把“</span><span
 style='font-family:"Microsoft YaHei"' lang=en-US>;C:\Python27\</span><span
 style='font-family:"Microsoft YaHei"' lang=zh-CN>”也就是刚才的安装路径，加到它的结尾。注意！要用英文分号和前面已有的内容隔开。</span></p>
 <p style='margin:0in;font-size:10.5pt'><span style='font-family:"Microsoft YaHei"'
 lang=en-US>在</span><span style='font-family:微软雅黑' lang=en-US>win10</span><span
 style='font-family:"Microsoft YaHei"' lang=en-US>上安装</span><span
 style='font-family:微软雅黑' lang=en-US>python</span><span style='font-family:
 "Microsoft YaHei"' lang=en-US>官网上下载的</span><span style='font-family:微软雅黑'
 lang=en-US>Python2</span><span style='font-family:"Microsoft YaHei"'
 lang=zh-CN>的</span><span style='font-family:"Microsoft YaHei"' lang=en-US> </span><span
 style='font-family:微软雅黑' lang=en-US>msi</span><span style='font-family:"Microsoft YaHei"'
 lang=en-US>安装包出现错误</span><span style='font-family:微软雅黑' lang=en-US>: </span><span
 style='font-family:微软雅黑;color:#0070C0' lang=en-US>there is a problem with
 widows installer package,a program run as part of setup …</span><span
 style='font-family:"Microsoft YaHei"' lang=zh-CN>要</span><span
 style='font-family:"Microsoft YaHei"' lang=en-US>以管理员权限运行</span><span
 style='font-family:微软雅黑' lang=en-US>msi</span><span style='font-family:"Microsoft YaHei"'
 lang=en-US>安装文件</span><span style='font-family:"Microsoft YaHei"' lang=zh-CN>：</span><span
 style='font-family:微软雅黑' lang=en-US> </span><span style='font-family:"Microsoft YaHei";
 color:#0070C0' lang=en-US>我的电脑</span><span style='font-family:微软雅黑;color:#0070C0'
 lang=en-US> -&gt; </span><span style='font-family:"Microsoft YaHei";
 color:#0070C0' lang=en-US>文件</span><span style='font-family:微软雅黑;color:#0070C0'
 lang=en-US> -&gt; </span><span style='font-family:"Microsoft YaHei";
 color:#0070C0' lang=en-US>打开命令行提示符</span><span style='font-family:微软雅黑;
 color:#0070C0' lang=en-US> -&gt; </span><span style='font-family:"Microsoft YaHei";
 color:#0070C0' lang=en-US>以管理员权限运行命令行</span><span style='font-family:微软雅黑;
 color:#0070C0' lang=en-US>… </span><span style='font-family:"Microsoft YaHei"'
 lang=en-US>然后在命令行中进入安装文件所在目录</span><span style='font-family:微软雅黑' lang=en-US>,
 </span><span style='font-family:"Microsoft YaHei"' lang=en-US>运行之</span><span
 style='font-family:"Microsoft YaHei"' lang=zh-CN>。比如</span><span
 style='font-family:微软雅黑' lang=en-US><span style='mso-spacerun:yes'>   </span></span><span
 style='font-family:微软雅黑;color:#0070C0' lang=en-US><span
 style='mso-spacerun:yes'> </span>D:\Downloads&gt;Python-2.7.11.amd.msi</span></p>
 <p style='margin:0in;font-size:10.5pt'><span style='font-weight:bold;
 font-family:Calibri' lang=en-US>Python</span><span style='font-weight:bold;
 font-family:微软雅黑' lang=en-US>3</span><span style='font-weight:bold;font-family:
 微软雅黑' lang=zh-CN>：</span><span style='font-family:微软雅黑' lang=en-US>winXP</span><span
 style='font-family:微软雅黑' lang=zh-CN>只能运行</span><span style='font-family:微软雅黑'
 lang=en-US>3.4</span><span style='font-family:微软雅黑' lang=zh-CN>版。</span><span
 style='font-family:"Microsoft YaHei"' lang=zh-CN>安装的时候，</span><span
 style='font-weight:bold;font-family:"Microsoft YaHei";color:red' lang=zh-CN>勾选</span><span
 style='font-weight:bold;font-family:微软雅黑;color:red' lang=zh-CN>“</span><span
 style='font-weight:bold;font-family:微软雅黑;color:red' lang=en-US>Add Python to
 environment variables</span><span style='font-weight:bold;font-family:微软雅黑;
 color:red' lang=zh-CN>”</span></p>
 <p style='margin:0in;font-family:"Microsoft YaHei";font-size:11.0pt'>当前的版本安装中将会默认已经安装了setuptools和pip这两个Python的基本工具。如果使用了比较旧的Python版本的话，需要自行安装这两个工具。</p>
 <p style='margin:0in;font-family:"Microsoft YaHei";font-size:11.0pt'><span
 style='mso-spacerun:yes'>    </span>setuptools：Python的基础工具包，用来构建、安装卸载Python程序</p>
 <p style='margin:0in;font-family:"Microsoft YaHei";font-size:11.0pt'><span
 style='mso-spacerun:yes'>   
 </span>pip：Python软件包的安装和管理工具。通过pip可以简单的安装Python的任意类库</p>
 <p style='margin:0in;font-size:11.0pt'><span style='font-weight:bold;
 font-family:"Microsoft YaHei"' lang=zh-CN>软件包，依赖环境</span><span
 style='font-family:Calibri' lang=en-US> </span><a
 href="http://www.lfd.uci.edu/~gohlke/pythonlibs"><span style='font-family:
 "Microsoft YaHei"' lang=zh-CN>http://www.lfd.uci.edu/~gohlke/pythonlibs</span></a><span
 style='font-family:Calibri' lang=en-US><span style='mso-spacerun:yes'>   
 </span></span><a href="https://pypi.python.org"><span style='font-family:"Microsoft YaHei"'
 lang=zh-CN>https://pypi.python.org</span></a></p>
 <p style='margin:0in;font-family:Consolas;font-size:11.0pt;color:#0070C0'
 lang=en-US>&nbsp;</p>
 <p style='margin:0in;font-family:Consolas;font-size:11.0pt;color:#0070C0'
 lang=en-US>&nbsp;</p>
 <ol type=1 style='margin-left:0in;direction:ltr;unicode-bidi:embed;margin-top:
  0in;margin-bottom:0in;font-size:16.0pt;font-weight:bold;font-style:normal'>
  <li value=3 style='margin-top:0;margin-bottom:0;vertical-align:middle;
      font-weight:bold;color:#002060' lang=en-US><span style='font-size:16.0pt;
      font-weight:bold;font-style:normal;font-weight:bold;font-family:"Microsoft YaHei";
      font-size:16.0pt'>执行Python程序：</span></li>
 </ol>
 <p style='margin:0in;font-size:10.5pt'><span style='font-family:Calibri'
 lang=en-US>3</span><span style='font-family:"Microsoft YaHei"' lang=zh-CN>种方式运行</span><span
 style='font-family:Calibri' lang=en-US>Python</span><span style='font-family:
 "Microsoft YaHei"' lang=zh-CN>程序：交互执行、解释模式执行代码、解释模式执行文件。</span></p>
 <ul type=disc style='margin-left:0in;direction:ltr;unicode-bidi:embed;
  margin-top:0in;margin-bottom:0in'>
  <li style='margin-top:0;margin-bottom:0;vertical-align:middle;color:#1E4E79'><span
      style='font-weight:bold;font-family:"Microsoft YaHei";font-size:14.0pt'>交互执行：</span></li>
 </ul>
 <p style='margin:0in;font-size:10.5pt'><span style='font-family:Calibri'
 lang=en-US>Windows</span><span style='font-family:"Microsoft YaHei"'
 lang=zh-CN>的</span><span style='font-family:Calibri' lang=en-US>CMD</span><span
 style='font-family:"Microsoft YaHei"' lang=zh-CN>，或者</span><span
 style='font-family:Calibri' lang=en-US> Linux</span><span style='font-family:
 "Microsoft YaHei"' lang=en-US>/Unix</span><span style='font-family:"Microsoft YaHei"'
 lang=zh-CN>的</span><span style='font-family:"Microsoft YaHei"' lang=en-US>Shell</span><span
 style='font-family:"Microsoft YaHei"' lang=zh-CN>里，输入</span><span
 style='font-family:"Microsoft YaHei"' lang=en-US>Python</span><span
 style='font-family:"Microsoft YaHei"' lang=zh-CN>回车，调出</span><span
 style='font-family:"Microsoft YaHei"' lang=en-US>Python</span><span
 style='font-family:"Microsoft YaHei"' lang=zh-CN>解释器，然后一行行输入代码。</span></p>
 <p style='margin:0in;margin-left:.375in;font-size:11.0pt'><span
 style='font-family:Consolas;color:#0070C0' lang=en-US>&gt;&gt;&gt; if 0 &lt;
 3:<span style='mso-spacerun:yes'>       </span></span><span style='font-family:
 "Microsoft YaHei"' lang=en-US># </span><span style='font-family:"Microsoft YaHei"'
 lang=zh-CN>主提示符</span></p>
 <p style='margin:0in;margin-left:.375in;font-size:11.0pt'><span
 style='font-family:Consolas;color:#0070C0' lang=en-US>...<span
 style='mso-spacerun:yes'>     </span>print &quot;Something&quot;<span
 style='mso-spacerun:yes'>  </span></span><span style='font-family:"Microsoft YaHei"'
 lang=en-US>#</span><span style='font-family:"Microsoft YaHei"' lang=zh-CN>从属提示符，表示缩进。复合语句之后的代码组（子句）</span></p>
 <p style='margin:0in;margin-left:.375in;font-size:11.0pt'><span
 style='font-family:Consolas;color:#0070C0' lang=en-US>...<span
 style='mso-spacerun:yes'>     </span></span><span style='font-family:"Microsoft YaHei"'
 lang=en-US># </span><span style='font-family:"Microsoft YaHei"' lang=zh-CN>从属提示符，表示下面的是输出</span></p>
 <p style='margin:0in;margin-left:.375in;font-family:Consolas;font-size:11.0pt'
 lang=en-US><span style='color:#00B050'>Something<span
 style='mso-spacerun:yes'>  </span></span><span style='color:#0070C0'><span
 style='mso-spacerun:yes'> </span></span></p>
 <p style='margin:0in;font-family:微软雅黑;font-size:10.5pt'>每次运行一个程序单元（语句或一个语句块），由空行结束代码块。</p>
 <p style='margin:0in;margin-left:.375in;font-family:Consolas;font-size:11.0pt;
 color:#0070C0'>&gt;&gt;&gt; a = []</p>
 <p style='margin:0in;margin-left:.375in;font-family:Consolas;font-size:11.0pt;
 color:#0070C0'>&gt;&gt;&gt; for char in &quot;about&quot;:</p>
 <p style='margin:0in;margin-left:.375in'><span style='font-family:Consolas;
 font-size:11.0pt;color:#0070C0' lang=zh-CN>...<span
 style='mso-spacerun:yes'>     </span>a.append(char)</span><span
 style='font-family:Consolas;font-size:11.0pt;color:#0070C0' lang=en-US> </span><span
 style='font-family:微软雅黑;font-size:10.5pt' lang=en-US># </span><span
 style='font-family:微软雅黑;font-size:10.5pt' lang=zh-CN>两次回车。第一次是换行，第二次是输入一个空行，结束</span><span
 style='font-family:微软雅黑;font-size:10.5pt' lang=en-US>for</span><span
 style='font-family:微软雅黑;font-size:10.5pt' lang=zh-CN>代码块。</span></p>
 <p style='margin:0in;margin-left:.375in;font-family:Consolas;font-size:11.0pt;
 color:#0070C0'>...<span style='mso-spacerun:yes'>     </span></p>
 <p style='margin:0in;margin-left:.375in'><span style='font-family:Consolas;
 font-size:11.0pt;color:#0070C0' lang=zh-CN>&gt;&gt;&gt; a</span><span
 style='font-family:Consolas;font-size:11.0pt;color:#0070C0' lang=en-US><span
 style='mso-spacerun:yes'>   </span>#</span><span style='font-family:微软雅黑;
 font-size:11.0pt;color:#0070C0' lang=en-US> </span><span style='font-family:
 微软雅黑;font-size:10.5pt' lang=zh-CN>有时候，不需要刻意写</span><span style='font-family:
 Calibri;font-size:10.5pt' lang=en-US> print </span><span style='font-family:
 微软雅黑;font-size:10.5pt' lang=zh-CN>语句</span></p>
 <p style='margin:0in;margin-left:.375in;font-family:Consolas;font-size:11.0pt;
 color:#00B050' lang=en-US>['a', 'b', 'o', 'u', 't']</p>
 <p style='margin:0in;font-family:微软雅黑;font-size:10.5pt'>主要用于实验，快速地弄懂一段代码究竟是什么作用。也可以用来快速测试组件或者模块</p>
 <p style='margin:0in;margin-left:.375in;font-family:Consolas;font-size:11.0pt;
 color:#0070C0' lang=en-US>&gt;&gt;&gt; import os</p>
 <p style='margin:0in;margin-left:.375in;font-family:Consolas;font-size:11.0pt;
 color:#0070C0' lang=en-US>&gt;&gt;&gt; os.getcwd()</p>
 <p style='margin:0in;margin-left:.375in;font-family:Consolas;font-size:11.0pt;
 color:#00B050' lang=en-US>'D:\\PyProject\\CloudInfraDeploy\\glue\\Src\\glue'</p>
 <p style='margin:0in;margin-left:.375in;font-size:11.0pt'><span
 style='font-family:Consolas;color:#0070C0' lang=en-US>&gt;&gt;&gt; dir(os) </span><span
 style='font-family:Consolas' lang=zh-CN><span
 style='mso-spacerun:yes'> </span># </span><span style='font-family:微软雅黑'
 lang=zh-CN>查看所有变量、模块、函数等等</span></p>
 <p style='margin:0in;margin-left:.375in;font-family:Consolas;font-size:11.0pt;
 color:#00B050' lang=en-US>['F_OK', 'O_APPEND', ……]</p>
 <p style='margin:0in;margin-left:.375in;font-size:11.0pt'><span
 style='font-family:Consolas;color:#0070C0' lang=en-US>&gt;&gt;&gt; help(os) </span><span
 style='font-family:Consolas' lang=zh-CN># </span><span style='font-family:
 微软雅黑' lang=zh-CN>查看帮助文档</span></p>
 <p style='margin:0in;margin-left:.375in;font-family:Consolas;font-size:11.0pt;
 color:#00B050' lang=en-US>Help on module os:……</p>
 <p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:10.5pt'>&nbsp;</p>
 <ul type=disc style='margin-left:0in;direction:ltr;unicode-bidi:embed;
  margin-top:0in;margin-bottom:0in'>
  <li style='margin-top:0;margin-bottom:0;vertical-align:middle;color:#1E4E79'><span
      style='font-weight:bold;font-family:"Microsoft YaHei";font-size:14.0pt'>解释模式执行文件</span></li>
 </ul>
 <p style='margin:0in;font-size:10.5pt'><span style='font-family:微软雅黑'
 lang=zh-CN>最常用。其实</span><span style='font-family:Calibri' lang=en-US>IDE</span><span
 style='font-family:微软雅黑' lang=zh-CN>里也是这样运行</span><span style='font-family:
 Calibri' lang=en-US>Python</span><span style='font-family:微软雅黑' lang=zh-CN>的。</span></p>
 <ol type=1 style='margin-left:.375in;direction:ltr;unicode-bidi:embed;
  margin-top:0in;margin-bottom:0in;font-family:微软雅黑;font-size:10.5pt;
  font-weight:normal;font-style:normal'>
  <li value=1 style='margin-top:0;margin-bottom:0;vertical-align:middle'><span
      style='font-family:微软雅黑;font-size:10.5pt;font-weight:normal;font-style:
      normal;font-family:微软雅黑;font-size:10.5pt' lang=zh-CN>程序员写好源代码</span><span
      style='font-family:Calibri;font-size:10.5pt;font-weight:normal;
      font-style:normal;font-family:Calibri;font-size:10.5pt' lang=en-US><span
      style='mso-spacerun:yes'>  </span>demo.py </span><span style='font-family:
      微软雅黑;font-size:10.5pt;font-weight:normal;font-style:normal;font-family:
      微软雅黑;font-size:10.5pt' lang=zh-CN>文件</span></li>
  <li style='margin-top:0;margin-bottom:0;vertical-align:middle'><span
      style='font-family:微软雅黑;font-size:10.5pt' lang=zh-CN>为了提高运行速度，</span><span
      style='font-family:Calibri;font-size:10.5pt' lang=en-US>Python</span><span
      style='font-family:微软雅黑;font-size:10.5pt' lang=zh-CN>将源代码编译（本质是翻译）成字节码</span><span
      style='font-family:Calibri;font-size:10.5pt' lang=en-US><span
      style='mso-spacerun:yes'>  </span>demo.pyc</span><span style='font-family:
      微软雅黑;font-size:10.5pt' lang=zh-CN>文件。这不是</span><span style='font-family:
      Calibri;font-size:10.5pt' lang=en-US>build/make</span><span
      style='font-family:微软雅黑;font-size:10.5pt' lang=zh-CN>，不能生成二进制文件（</span><span
      style='font-family:Calibri;font-size:10.5pt' lang=en-US>CPU</span><span
      style='font-family:微软雅黑;font-size:10.5pt' lang=zh-CN>指令）。并且，如果已经有</span><span
      style='font-family:Calibri;font-size:10.5pt' lang=en-US> demo.pyc</span><span
      style='font-family:微软雅黑;font-size:10.5pt' lang=zh-CN>，而且源代码没有改变过，那就不会再次生成</span><span
      style='font-family:Calibri;font-size:10.5pt' lang=en-US> pyc </span><span
      style='font-family:微软雅黑;font-size:10.5pt' lang=zh-CN>。如果不能写入硬盘，</span><span
      style='font-family:Calibri;font-size:10.5pt' lang=en-US>pyc</span><span
      style='font-family:微软雅黑;font-size:10.5pt' lang=zh-CN>就会放在内存，运行后删除。</span></li>
 </ol>
 <ol type=1 style='margin-left:.375in;direction:ltr;unicode-bidi:embed;
  margin-top:0in;margin-bottom:0in;font-family:Calibri;font-size:10.5pt;
  font-weight:normal;font-style:normal'>
  <li value=3 style='margin-top:0;margin-bottom:0;vertical-align:middle'><span
      style='font-family:Calibri;font-size:10.5pt;font-weight:normal;
      font-style:normal;font-family:Calibri;font-size:10.5pt' lang=en-US>Python</span><span
      style='font-family:微软雅黑;font-size:10.5pt;font-weight:normal;font-style:
      normal;font-family:微软雅黑;font-size:10.5pt' lang=zh-CN>虚拟机</span><span
      style='font-family:Calibri;font-size:10.5pt;font-weight:normal;
      font-style:normal;font-family:Calibri;font-size:10.5pt' lang=en-US>/PVM</span><span
      style='font-family:微软雅黑;font-size:10.5pt;font-weight:normal;font-style:
      normal;font-family:微软雅黑;font-size:10.5pt' lang=zh-CN>，是代码与计算机硬件之间的软件逻辑层。载入</span><span
      style='font-family:Calibri;font-size:10.5pt;font-weight:normal;
      font-style:normal;font-family:Calibri;font-size:10.5pt' lang=en-US>
      demo.pyc </span><span style='font-family:微软雅黑;font-size:10.5pt;
      font-weight:normal;font-style:normal;font-family:微软雅黑;font-size:10.5pt'
      lang=zh-CN>，在</span><span style='font-family:Calibri;font-size:10.5pt;
      font-weight:normal;font-style:normal;font-family:Calibri;font-size:10.5pt'
      lang=en-US>PVM</span><span style='font-family:微软雅黑;font-size:10.5pt;
      font-weight:normal;font-style:normal;font-family:微软雅黑;font-size:10.5pt'
      lang=zh-CN>内部编译、运行</span><span style='font-family:Calibri;font-size:10.5pt;
      font-weight:normal;font-style:normal;font-family:Calibri;font-size:10.5pt'
      lang=en-US> pyc</span><span style='font-family:微软雅黑;font-size:10.5pt;
      font-weight:normal;font-style:normal;font-family:微软雅黑;font-size:10.5pt'
      lang=zh-CN>文件。</span></li>
 </ol>
 <p style='margin:0in;font-size:10.5pt'><span style='font-family:Calibri'
 lang=en-US>CMD</span><span style='font-family:微软雅黑' lang=en-US>&gt;</span><span
 style='font-family:Calibri' lang=en-US>Python<span style='mso-spacerun:yes'> 
 </span>demo.py<span style='mso-spacerun:yes'>   </span>--</span><span
 style='font-family:微软雅黑' lang=zh-CN>运行命令的格式（</span><span style='font-family:
 Calibri' lang=en-US>Unix</span><span style='font-family:微软雅黑' lang=zh-CN>的</span><span
 style='font-family:Calibri' lang=en-US>Shell</span><span style='font-family:
 微软雅黑' lang=zh-CN>也一样）</span></p>
 <p style='margin:0in;font-size:10.5pt'><span style='font-family:Calibri'
 lang=en-US>CMD</span><span style='font-family:微软雅黑' lang=en-US>&gt;</span><span
 style='font-family:Calibri' lang=en-US>Python<span style='mso-spacerun:yes'> 
 </span>demo.py &gt; log.txt<span style='mso-spacerun:yes'>  </span>--</span><span
 style='font-family:微软雅黑' lang=zh-CN>将输出重定向</span></p>
 <p style='margin:0in;font-size:10.5pt'><span style='font-family:Calibri'
 lang=en-US>CMD</span><span style='font-family:微软雅黑' lang=en-US>&gt;</span><span
 style='font-family:Calibri' lang=en-US>C:\Python35\python<span
 style='mso-spacerun:yes'>  </span>D:demo.py<span style='mso-spacerun:yes'>  
 </span>--Python</span><span style='font-family:微软雅黑' lang=zh-CN>解释器和脚本都可以</span><span
 style='font-weight:bold;font-family:微软雅黑' lang=zh-CN>使用绝对路径</span><span
 style='font-family:微软雅黑' lang=zh-CN>。</span></p>
 <p style='margin:0in;font-size:10.5pt'><span style='font-family:"Microsoft YaHei"'
 lang=zh-CN>所以，</span><span style='font-family:Calibri' lang=en-US>Python</span><span
 style='font-family:"Microsoft YaHei"' lang=zh-CN>的开发和编译、执行，都在同一个系统内进行的。完全不需要编译，大大缩短开发时间。</span></p>
 <p style='margin:0in;font-size:10.5pt'><span style='font-family:"Microsoft YaHei"'
 lang=zh-CN>顶层入口源代码文件，一般叫脚本，可以不以</span><span style='font-family:Calibri'
 lang=en-US> .py</span><span style='font-family:"Microsoft YaHei"' lang=zh-CN>结尾；而被导入的文件，一般叫做模块，强制使用</span><span
 style='font-family:Calibri' lang=en-US> .py</span><span style='font-family:
 "Microsoft YaHei"' lang=zh-CN>结尾。</span></p>
 <p style='margin:0in;font-family:"Microsoft YaHei";font-size:10.5pt'><span
 style='font-weight:bold'>直接运行代码</span></p>
 <p style='margin:0in;font-size:10.5pt'><span style='font-family:Calibri'
 lang=en-US><span style='mso-spacerun:yes'> </span>Linux</span><span
 style='font-family:"Microsoft YaHei"' lang=en-US>/Unix</span><span
 style='font-family:"Microsoft YaHei"' lang=zh-CN>里，</span><span
 style='font-family:微软雅黑' lang=zh-CN>编写一个</span><span style='font-family:Calibri'
 lang=en-US>Python</span><span style='font-family:微软雅黑' lang=zh-CN>文件，然后双击运行。</span><span
 style='font-family:Calibri' lang=en-US> </span><span style='font-family:微软雅黑'
 lang=zh-CN>很少见，很少用，这也是</span><span style='font-family:微软雅黑;color:#0070C0'
 lang=en-US>#!/usr/bin/env python</span><span style='font-family:微软雅黑'
 lang=zh-CN>存在的理由。</span></p>
 <p style='margin:0in;font-size:10.5pt'><span style='font-family:微软雅黑'
 lang=zh-CN>写好</span><span style='font-family:Calibri' lang=en-US>Demo </span><span
 style='font-family:微软雅黑' lang=zh-CN>文件（无</span><span style='font-family:Calibri'
 lang=en-US>.py</span><span style='font-family:微软雅黑' lang=zh-CN>后缀），内容如下：</span></p>
 <p style='margin:0in;margin-left:.375in;font-family:Consolas;font-size:11.0pt;
 color:#0070C0' lang=en-US>#!/usr/bin/env python</p>
 <p style='margin:0in;margin-left:.375in;font-family:Consolas;font-size:11.0pt;
 color:#0070C0' lang=en-US># -*- coding:utf-8 -*-</p>
 <p style='margin:0in;margin-left:.375in;font-family:Consolas;font-size:11.0pt;
 color:#0070C0' lang=en-US>print(&quot;HelloWorld&quot;)</p>
 <p style='margin:0in;font-size:10.5pt'><span style='font-family:"Microsoft YaHei"'
 lang=zh-CN>改变模式</span><span style='font-family:Calibri' lang=en-US><span
 style='mso-spacerun:yes'>  </span></span><span style='font-family:Consolas;
 color:#0070C0' lang=en-US><span style='mso-spacerun:yes'> </span>chmod r+x
 Demo</span></p>
 <p style='margin:0in;font-size:10.5pt'><span style='font-family:微软雅黑'
 lang=zh-CN>直接运行</span><span style='font-family:Calibri' lang=en-US><span
 style='mso-spacerun:yes'>   </span></span><span style='font-family:Consolas;
 color:#0070C0' lang=en-US><span style='mso-spacerun:yes'>  </span>./Demo</span></p>
 <p style='margin:0in;font-size:10.5pt'><span style='font-weight:bold;
 font-family:Calibri' lang=en-US>Python</span><span style='font-weight:bold;
 font-family:"Microsoft YaHei"' lang=zh-CN>的其他实现方式</span></p>
 <ul type=disc style='margin-left:.375in;direction:ltr;unicode-bidi:embed;
  margin-top:0in;margin-bottom:0in'>
  <li style='margin-top:0;margin-bottom:0;vertical-align:middle'><span
      style='font-family:Calibri;font-size:10.5pt' lang=en-US>Psyco</span><span
      style='font-family:"Microsoft YaHei";font-size:10.5pt' lang=en-US>/PyPy</span><span
      style='font-family:"Microsoft YaHei";font-size:10.5pt' lang=zh-CN>：在运行时，将部分字节码转成二进制指令，速度提高</span><span
      style='font-family:"Microsoft YaHei";font-size:10.5pt' lang=en-US>4</span><span
      style='font-family:"Microsoft YaHei";font-size:10.5pt' lang=zh-CN>倍以上。</span><span
      style='font-family:"Microsoft YaHei";font-size:10.5pt' lang=en-US>PyPy</span><span
      style='font-family:"Microsoft YaHei";font-size:10.5pt' lang=zh-CN>是后起之秀。</span><span
      style='font-family:Arial;font-size:10.5pt' lang=en-US>.pyc</span><span
      style='font-family:"Microsoft YaHei";font-size:10.5pt' lang=zh-CN>加载更快，运行无差别；</span><span
      style='font-family:Arial;font-size:10.5pt' lang=en-US>.pyo</span><span
      style='font-family:"Microsoft YaHei";font-size:10.5pt' lang=zh-CN>，优化后的文件，运行更快</span><span
      style='font-family:微软雅黑;font-size:10.5pt' lang=zh-CN>。</span><span
      style='font-family:"Microsoft YaHei";font-size:10.5pt' lang=zh-CN>这些都是通过源代码编译字节码，然后在虚拟机运行。</span></li>
  <li style='margin-top:0;margin-bottom:0;vertical-align:middle'><span
      style='font-family:微软雅黑;font-size:10.5pt' lang=en-US>CPython</span><span
      style='font-family:"Microsoft YaHei";font-size:10.5pt' lang=zh-CN>，就是上面的过程。官方标准，</span><span
      style='font-family:Calibri;font-size:10.5pt' lang=en-US>C</span><span
      style='font-family:"Microsoft YaHei";font-size:10.5pt' lang=zh-CN>语言编写，速度快，最完整健全。</span></li>
  <li style='margin-top:0;margin-bottom:0;vertical-align:middle'><span
      style='font-family:微软雅黑;font-size:10.5pt' lang=en-US>Jython</span><span
      style='font-family:"Microsoft YaHei";font-size:10.5pt' lang=zh-CN>，为了与</span><span
      style='font-family:Calibri;font-size:10.5pt' lang=en-US>Java</span><span
      style='font-family:"Microsoft YaHei";font-size:10.5pt' lang=zh-CN>集成而产生。可以让</span><span
      style='font-family:微软雅黑;font-size:10.5pt' lang=en-US>py</span><span
      style='font-family:"Microsoft YaHei";font-size:10.5pt' lang=zh-CN>文件转化为</span><span
      style='font-family:微软雅黑;font-size:10.5pt' lang=en-US>Java</span><span
      style='font-family:微软雅黑;font-size:10.5pt' lang=zh-CN>字节码，然后就像一个</span><span
      style='font-family:Calibri;font-size:10.5pt' lang=en-US>Java</span><span
      style='font-family:"Microsoft YaHei";font-size:10.5pt' lang=zh-CN>程序一样在</span><span
      style='font-family:Calibri;font-size:10.5pt' lang=en-US>JVM</span><span
      style='font-family:"Microsoft YaHei";font-size:10.5pt' lang=zh-CN>中执行。</span></li>
  <li style='margin-top:0;margin-bottom:0;vertical-align:middle'><span
      style='font-family:微软雅黑;font-size:10.5pt' lang=en-US>IronPython</span><span
      style='font-family:"Microsoft YaHei";font-size:10.5pt' lang=zh-CN>，为了与</span><span
      style='font-family:Calibri;font-size:10.5pt' lang=en-US>.Net/C#</span><span
      style='font-family:"Microsoft YaHei";font-size:10.5pt' lang=zh-CN>平台集成。</span></li>
  <li style='margin-top:0;margin-bottom:0;vertical-align:middle'><span
      style='font-family:Calibri;font-size:10.5pt' lang=en-US>Shedskin</span><span
      style='font-family:"Microsoft YaHei";font-size:10.5pt' lang=en-US> C++</span><span
      style='font-family:"Microsoft YaHei";font-size:10.5pt' lang=zh-CN>：将</span><span
      style='font-family:"Microsoft YaHei";font-size:10.5pt' lang=en-US>Python</span><span
      style='font-family:"Microsoft YaHei";font-size:10.5pt' lang=zh-CN>代码转成</span><span
      style='font-family:"Microsoft YaHei";font-size:10.5pt' lang=en-US>C++</span><span
      style='font-family:"Microsoft YaHei";font-size:10.5pt' lang=zh-CN>字节码，然后编译链接。</span></li>
  <li style='margin-top:0;margin-bottom:0;vertical-align:middle'><span
      style='font-family:"Microsoft YaHei";font-size:10.5pt' lang=zh-CN>转为可执行程序：冻结二进制文件</span><span
      style='font-family:Calibri;font-size:10.5pt' lang=en-US> Frozen</span><span
      style='font-family:"Microsoft YaHei";font-size:10.5pt' lang=en-US> Binary</span><span
      style='font-family:"Microsoft YaHei";font-size:10.5pt' lang=zh-CN>，将字节码、</span><span
      style='font-family:"Microsoft YaHei";font-size:10.5pt' lang=en-US>PVM</span><span
      style='font-family:"Microsoft YaHei";font-size:10.5pt' lang=zh-CN>、支持文件捆绑为一个软件包。</span><span
      style='font-family:"Microsoft YaHei";font-size:10.5pt' lang=en-US>Windows
      </span><span style='font-family:"Microsoft YaHei";font-size:10.5pt'
      lang=zh-CN>用</span><span style='font-family:"Microsoft YaHei";font-size:
      10.5pt' lang=en-US> py2exe </span><span style='font-family:"Microsoft YaHei";
      font-size:10.5pt' lang=zh-CN>做成</span><span style='font-family:"Microsoft YaHei";
      font-size:10.5pt' lang=en-US> exe</span><span style='font-family:"Microsoft YaHei";
      font-size:10.5pt' lang=zh-CN>文件，</span><span style='font-family:"Microsoft YaHei";
      font-size:10.5pt' lang=en-US>Unix/Linux </span><span style='font-family:
      "Microsoft YaHei";font-size:10.5pt' lang=zh-CN>用</span><span
      style='font-family:"Microsoft YaHei";font-size:10.5pt' lang=en-US>
      PyInstaller</span><span style='font-family:"Microsoft YaHei";font-size:
      10.5pt' lang=zh-CN>转成二进制文件。</span></li>
 </ul>
 <ol type=1 style='margin-left:0in;direction:ltr;unicode-bidi:embed;margin-top:
  0in;margin-bottom:0in;font-size:16.0pt;font-weight:bold;font-style:normal'>
  <li value=4 style='margin-top:0;margin-bottom:0;vertical-align:middle;
      font-weight:bold;color:#002060' lang=en-US><span style='font-size:16.0pt;
      font-weight:bold;font-style:normal;font-weight:bold;font-family:"Microsoft YaHei";
      font-size:16.0pt'>IDE/Integrated Development Environment</span></li>
 </ol>
 <p style='margin:0in;font-family:"Microsoft YaHei";font-size:11.0pt'><span
 lang=en-US>IDLE</span><span lang=zh-CN>、</span><span lang=en-US>Eclipse</span><span
 lang=zh-CN>、</span><span lang=en-US>Pycharm</span></p>
 <p style='margin:0in;font-family:"Microsoft YaHei";font-size:11.0pt'
 lang=en-US>&nbsp;</p>
</ul>

</div>

</div>

</div>

<div>

<p style='margin:0in'>&nbsp;</p>

<p style='text-align:left;margin:0in;font-family:宋体;font-size:9pt;color:#969696;
direction:ltr'>已使用 Microsoft OneNote 2013 创建。</p>

</div>

</body>

</html>
